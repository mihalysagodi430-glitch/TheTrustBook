import Stripe from 'stripe'; import getRawBody from 'raw-body'; import { createClient } from '@supabase/supabase-js'; export const config = { api: { bodyParser: false } }; const stripe = new Stripe(process.env.STRIPE_SECRET_KEY); const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_SERVICE_ROLE); export default async function handler(req, res){ const sig = req.headers['stripe-signature']; const buf = await getRawBody(req); let event; try{ event = stripe.webhooks.constructEvent(buf, sig, process.env.STRIPE_WEBHOOK_SECRET); }catch(err){ console.error('Webhook signature verification failed.', err.message); return res.status(400).send(`Webhook Error: ${err.message}`); } if(event.type === 'checkout.session.completed'){ const session = event.data.object; try{ if(session.mode === 'subscription' || session.subscription){ await supabase.from('subscriptions').insert({ user_id: session.client_reference_id || null, stripe_customer_id: session.customer, stripe_subscription_id: session.subscription || null, plan_id: session.metadata?.plan || null, status: 'active' }); } else { await supabase.from('purchases').update({ status: 'completed' }).eq('stripe_session_id', session.id); } }catch(e){ console.error('Supabase update error', e.message); } } res.json({ received:true }); }